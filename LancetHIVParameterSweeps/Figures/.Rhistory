art_temp$ARTcoverage <- art_temp$On_ART / art_temp$Infected
art_temp$sim.id <- paste(dir)
#art scale-up
i=0
for(dir in primary_dirs) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
art_temp <- aggregate(cbind(On_ART,Infected) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
art_temp$ARTcoverage <- art_temp$On_ART / art_temp$Infected
art_temp$sim.id <- paste(dir)
if (i == 1){
art_values1 <- art_temp
}
else{
art_values1 <- rbind(art_values1, art_temp)
}
print(paste("working on folder", i, dir,sep=" "))
}
head(inc_values6.agg.m)
head(art_values1)
ggplot(data=subset(inc_values6.agg.m)) +
geom_line(aes(x=Year2, y=IP_Key.ARTstate_P,group=interaction(IP_Key.ARTstate_f,sim.id), color=IP_Key.ARTstate_f, alpha=0.02),size=1,alpha=0.02) +
geom_smooth(aes(x=Year2, y=IP_Key.ARTstate_P, color=IP_Key.ARTstate_f, group=IP_Key.ARTstate_f),method="loess", span=0.2, se=F,size=2) +
geom_smooth(data=art_values1, aes(x=Year, y=ARTcoverage),method="loess", color="black", span=0.2, se=F,size=2) +
xlab("Year")+
ylab("Proportion of transmissions")+
theme_bw(base_size=16) +
scale_x_continuous(breaks = seq(1980,2051,10),limits=c(1980,2051), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,1,0.1),limits=c(0,1), expand = c(0,0)) +
scale_color_manual(labels = c("Never initiated ART","On ART", "Dropped out from ART"), values = c("red", "blue", "purple")) +
ggtitle("Transmissions by ART status of transmitter") +
theme(legend.position="bottom") +
guides(color=guide_legend(title="ART status", nrow=1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(colour="black", fill="white")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
ggplot(data=subset(inc_values6.agg.m)) +
geom_line(aes(x=Year2, y=IP_Key.ARTstate_P,group=interaction(IP_Key.ARTstate_f,sim.id), color=IP_Key.ARTstate_f, alpha=0.02),size=1,alpha=0.02) +
geom_smooth(aes(x=Year2, y=IP_Key.ARTstate_P, color=IP_Key.ARTstate_f, group=IP_Key.ARTstate_f),method="loess", span=0.2, se=F,size=2) +
geom_smooth(data=art_values1, aes(x=Year, y=ARTcoverage),method="loess", color="black", span=0.2, se=F,size=1,linetype=2) +
xlab("Year")+
ylab("Proportion of transmissions")+
theme_bw(base_size=16) +
scale_x_continuous(breaks = seq(1980,2051,10),limits=c(1980,2051), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,1,0.1),limits=c(0,1), expand = c(0,0)) +
scale_color_manual(labels = c("Never initiated ART","On ART", "Dropped out from ART"), values = c("red", "blue", "purple")) +
ggtitle("Transmissions by ART status of transmitter") +
theme(legend.position="bottom") +
guides(color=guide_legend(title="ART status", nrow=1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(colour="black", fill="white")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
head(art_values1)
ggplot(data=subset(inc_values6.agg.m)) +
geom_line(aes(x=Year2, y=IP_Key.ARTstate_P,group=interaction(IP_Key.ARTstate_f,sim.id), color=IP_Key.ARTstate_f, alpha=0.02),size=1,alpha=0.02) +
geom_smooth(aes(x=Year2, y=IP_Key.ARTstate_P, color=IP_Key.ARTstate_f, group=IP_Key.ARTstate_f),method="loess", span=0.2, se=F,size=2) +
geom_smooth(data=art_values1, aes(x=Year, y=ARTcoverage, color="black"),method="loess", color="black", span=0.2, se=F,size=1,linetype=2) +
xlab("Year")+
ylab("Proportion of transmissions")+
theme_bw(base_size=16) +
scale_x_continuous(breaks = seq(1980,2051,10),limits=c(1980,2051), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,1,0.1),limits=c(0,1), expand = c(0,0)) +
scale_color_manual(labels = c("Never initiated ART","On ART", "Dropped out from ART", "ART coverage"), values = c("red", "blue", "purple","black")) +
ggtitle("Transmissions by ART status of transmitter") +
theme(legend.position="bottom") +
guides(color=guide_legend(title="ART status", nrow=1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(colour="black", fill="white")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
setwd("C:\\Users\\aakullian\\Dropbox (IDM)\\GitHub\\EMOD_eswatini\\LancetHIVParameterSweeps\\Figures")
ggsave("TransmittersByARTstate_proportions_ARTdata.jpg", height=8, width=8)
#read in reportHIVbyageandgender files
input_dir <- "C:\\Users\\aakullian\\Dropbox (IDM)\\GitHub\\EMOD_eswatini\\Baseline_transmission_ARTstate"
primary_dirs = list.files(input_dir)
inc_values6 <- data.frame("Year2"=seq(1980,2056,1))
i=0
for(dir in primary_dirs) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
temp_table$Year2 <- floor((temp_table$Year-0.5))
temp_table$Uninfected.Population = temp_table$Population-temp_table$Infected
trajectories_IR.1a <- aggregate(cbind(Newly.Infected,Transmitters) ~ Year2+IP_Key.ARTstate, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
trajectories_IR.2 <- aggregate(cbind(Uninfected.Population) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum)
trajectories_IR.2$Year2 <- floor(trajectories_IR.2$Year-0.5)
trajectories_IR.2 <- trajectories_IR.2[!duplicated(trajectories_IR.2[c("Year2")]),] #remove second instance of duplicate rows
trajectories_IR.2 <- trajectories_IR.2[-match("Year",names(trajectories_IR.2))]
trajectories_IRoverall <- merge(trajectories_IR.1a, trajectories_IR.2, by=c("Year2"))
trajectories_IRoverall$incidence <- trajectories_IRoverall$Newly.Infected / trajectories_IRoverall$Uninfected.Population
trajectories_IRoverall$sim.id <- paste(dir)
if (i == 1){
inc_values6 <- trajectories_IRoverall
}
else{
inc_values6 <- rbind(inc_values6, trajectories_IRoverall)
}
print(paste("working on folder", i, dir,sep=" "))
}
source('C:/Users/aakullian/Dropbox (IDM)/GitHub/EMOD_eswatini/LancetHIVParameterSweeps/Swaziland_paramter_sweeps_for_LancetHIVRevisions.R', echo=TRUE)
#read in reportHIVbyageandgender files
input_dir <- "C:\\Users\\aakullian\\Dropbox (IDM)\\GitHub\\EMOD_eswatini\\Baseline_transmission_ARTstate"
primary_dirs = list.files(input_dir)
inc_values6 <- data.frame("Year2"=seq(1980,2056,1))
i=0
for(dir in primary_dirs) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
temp_table$Year2 <- floor((temp_table$Year-0.5))
temp_table$Uninfected.Population = temp_table$Population-temp_table$Infected
trajectories_IR.1a <- aggregate(cbind(Newly.Infected,Transmitters) ~ Year2+IP_Key.ARTstate, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
trajectories_IR.2 <- aggregate(cbind(Uninfected.Population) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum)
trajectories_IR.2$Year2 <- floor(trajectories_IR.2$Year-0.5)
trajectories_IR.2 <- trajectories_IR.2[!duplicated(trajectories_IR.2[c("Year2")]),] #remove second instance of duplicate rows
trajectories_IR.2 <- trajectories_IR.2[-match("Year",names(trajectories_IR.2))]
trajectories_IRoverall <- merge(trajectories_IR.1a, trajectories_IR.2, by=c("Year2"))
trajectories_IRoverall$incidence <- trajectories_IRoverall$Newly.Infected / trajectories_IRoverall$Uninfected.Population
trajectories_IRoverall$sim.id <- paste(dir)
if (i == 1){
inc_values6 <- trajectories_IRoverall
}
else{
inc_values6 <- rbind(inc_values6, trajectories_IRoverall)
}
print(paste("working on folder", i, dir,sep=" "))
}
inc_values6.agg <- aggregate(Transmitters ~ Year2+sim.id, inc_values6, FUN=sum)
inc_values6.agg.m <- merge(inc_values6, inc_values6.agg, by=c("Year2","sim.id"))
inc_values6.agg.m$IP_Key.ARTstate_P <- inc_values6.agg.m$Transmitters.x / inc_values6.agg.m$Transmitters.y
head(inc_values6.agg.m)
table(inc_values6.agg.m$IP_Key.ARTstate)
inc_values6.agg.m$IP_Key.ARTstate_f <- ordered(inc_values6.agg.m$IP_Key.ARTstate, levels=c("NeverOnART","OnART","OffART"))
ggplot(data=subset(inc_values6.agg.m)) +
geom_line(aes(x=Year2, y=IP_Key.ARTstate_P,group=interaction(IP_Key.ARTstate_f,sim.id), color=IP_Key.ARTstate_f, alpha=0.02),size=1,alpha=0.02) +
geom_smooth(aes(x=Year2, y=IP_Key.ARTstate_P, color=IP_Key.ARTstate_f, group=IP_Key.ARTstate_f),method="loess", span=0.2, se=F,size=2) +
xlab("Year")+
ylab("Proportion of transmissions")+
theme_bw(base_size=16) +
scale_x_continuous(breaks = seq(1980,2051,10),limits=c(1980,2051), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,1,0.1),limits=c(0,1), expand = c(0,0)) +
scale_color_manual(labels = c("Never initiated ART","On ART", "Dropped out from ART"), values = c("red", "blue", "purple")) +
ggtitle("Transmissions by ART status of transmitter") +
theme(legend.position="bottom") +
guides(color=guide_legend(title="ART status", nrow=1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(colour="black", fill="white")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
setwd("C:\\Users\\aakullian\\Dropbox (IDM)\\GitHub\\EMOD_eswatini\\LancetHIVParameterSweeps\\Figures")
ggsave("TransmittersByARTstate_proportions_baseline.jpg", height=8, width=8)
head(inc_values6.agg.m)
summary(inc_values6.agg.m$incidence)
summary(inc_values6.agg.m$IP_Key.ARTstate_P)
ggplot(data=subset(inc_values6.agg.m)) +
#geom_line(aes(x=Year2, y=IP_Key.ARTstate_P,group=interaction(IP_Key.ARTstate_f,sim.id), color=IP_Key.ARTstate_f, alpha=0.02),size=1,alpha=0.02) +
geom_smooth(aes(x=Year2, y=IP_Key.ARTstate_P, color=IP_Key.ARTstate_f, group=IP_Key.ARTstate_f),method="loess", span=0.2, se=F,size=2) +
xlab("Year")+
ylab("Proportion of transmissions")+
theme_bw(base_size=16) +
scale_x_continuous(breaks = seq(1980,2051,10),limits=c(1980,2051), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,1,0.1),limits=c(0,1), expand = c(0,0)) +
#scale_color_manual(labels = c("Never initiated ART","On ART", "Dropped out from ART"), values = c("red", "blue", "purple")) +
ggtitle("Transmissions by ART status of transmitter") +
theme(legend.position="bottom") +
guides(color=guide_legend(title="ART status", nrow=1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(colour="black", fill="white")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
#read in reportHIVbyageandgender files
input_dir <- "C:\\Users\\aakullian\\Dropbox (IDM)\\GitHub\\EMOD_eswatini\\Baseline_transmission_ARTstate"
primary_dirs = list.files(input_dir)
inc_values6 <- data.frame("Year2"=seq(1980,2056,1))
i=0
for(dir in primary_dirs) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
temp_table$Year2 <- floor((temp_table$Year-0.5))
temp_table$Uninfected.Population = temp_table$Population-temp_table$Infected
trajectories_IR.1a <- aggregate(cbind(Newly.Infected,Transmitters) ~ Year2+IP_Key.ARTstate, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
trajectories_IR.2 <- aggregate(cbind(Uninfected.Population) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum)
trajectories_IR.2$Year2 <- floor(trajectories_IR.2$Year-0.5)
trajectories_IR.2 <- trajectories_IR.2[!duplicated(trajectories_IR.2[c("Year2")]),] #remove second instance of duplicate rows
trajectories_IR.2 <- trajectories_IR.2[-match("Year",names(trajectories_IR.2))]
trajectories_IRoverall <- merge(trajectories_IR.1a, trajectories_IR.2, by=c("Year2"))
trajectories_IRoverall$incidence <- trajectories_IRoverall$Newly.Infected / trajectories_IRoverall$Uninfected.Population
trajectories_IRoverall$sim.id <- paste(dir)
if (i == 1){
inc_values6 <- trajectories_IRoverall
}
else{
inc_values6 <- rbind(inc_values6, trajectories_IRoverall)
}
print(paste("working on folder", i, dir,sep=" "))
}
inc_values6.agg <- aggregate(Transmitters ~ Year2+sim.id, inc_values6, FUN=sum)
inc_values6.agg.m <- merge(inc_values6, inc_values6.agg, by=c("Year2","sim.id"))
inc_values6.agg.m$IP_Key.ARTstate_P <- inc_values6.agg.m$Transmitters.x / inc_values6.agg.m$Transmitters.y
head(inc_values6.agg.m)
summary(inc_values6.agg.m$IP_Key.ARTstate_P)
table(inc_values6.agg.m$IP_Key.ARTstate)
inc_values6.agg.m$IP_Key.ARTstate_f <- ordered(inc_values6.agg.m$IP_Key.ARTstate, levels=c("NeverOnART","OnART","OffART"))
ggplot(data=subset(inc_values6.agg.m)) +
#geom_line(aes(x=Year2, y=IP_Key.ARTstate_P,group=interaction(IP_Key.ARTstate_f,sim.id), color=IP_Key.ARTstate_f, alpha=0.02),size=1,alpha=0.02) +
geom_smooth(aes(x=Year2, y=IP_Key.ARTstate_P, color=IP_Key.ARTstate_f, group=IP_Key.ARTstate_f),method="loess", span=0.2, se=F,size=2) +
xlab("Year")+
ylab("Proportion of transmissions")+
theme_bw(base_size=16) +
scale_x_continuous(breaks = seq(1980,2051,10),limits=c(1980,2051), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,1,0.1),limits=c(0,1), expand = c(0,0)) +
#scale_color_manual(labels = c("Never initiated ART","On ART", "Dropped out from ART"), values = c("red", "blue", "purple")) +
ggtitle("Transmissions by ART status of transmitter") +
theme(legend.position="bottom") +
guides(color=guide_legend(title="ART status", nrow=1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(colour="black", fill="white")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
ggplot(data=subset(inc_values6.agg.m)) +
geom_line(aes(x=Year2, y=IP_Key.ARTstate_P,group=interaction(IP_Key.ARTstate_f,sim.id), color=IP_Key.ARTstate_f, alpha=0.02),size=1,alpha=0.02) +
geom_smooth(aes(x=Year2, y=IP_Key.ARTstate_P, color=IP_Key.ARTstate_f, group=IP_Key.ARTstate_f),method="loess", span=0.2, se=F,size=2) +
xlab("Year")+
ylab("Proportion of transmissions")+
theme_bw(base_size=16) +
scale_x_continuous(breaks = seq(1980,2051,10),limits=c(1980,2051), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,1,0.1),limits=c(0,1), expand = c(0,0)) +
scale_color_manual(labels = c("Never initiated ART","On ART", "Dropped out from ART"), values = c("red", "blue", "purple")) +
ggtitle("Transmissions by ART status of transmitter") +
theme(legend.position="bottom") +
guides(color=guide_legend(title="ART status", nrow=1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(colour="black", fill="white")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
setwd("C:\\Users\\aakullian\\Dropbox (IDM)\\GitHub\\EMOD_eswatini\\LancetHIVParameterSweeps\\Figures")
ggsave("TransmittersByARTstate_proportions_baseline.jpg", height=8, width=8)
#art scale-up
i=0
for(dir in primary_dirs) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
art_temp <- aggregate(cbind(On_ART,Infected) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
art_temp$ARTcoverage <- art_temp$On_ART / art_temp$Infected
art_temp$sim.id <- paste(dir)
if (i == 1){
art_values1 <- art_temp
}
else{
art_values1 <- rbind(art_values1, art_temp)
}
print(paste("working on folder", i, dir,sep=" "))
}
head(art_values1)
ggplot(data=subset(inc_values6.agg.m)) +
geom_line(aes(x=Year2, y=IP_Key.ARTstate_P,group=interaction(IP_Key.ARTstate_f,sim.id), color=IP_Key.ARTstate_f, alpha=0.02),size=1,alpha=0.02) +
geom_smooth(aes(x=Year2, y=IP_Key.ARTstate_P, color=IP_Key.ARTstate_f, group=IP_Key.ARTstate_f),method="loess", span=0.2, se=F,size=2) +
geom_smooth(data=art_values1, aes(x=Year, y=ARTcoverage, color="black"),method="loess", color="black", span=0.2, se=F,size=1,linetype=2) +
xlab("Year")+
ylab("Proportion of transmissions")+
theme_bw(base_size=16) +
scale_x_continuous(breaks = seq(1980,2051,10),limits=c(1980,2051), expand = c(0,0)) +
scale_y_continuous(breaks = seq(0,1,0.1),limits=c(0,1), expand = c(0,0)) +
scale_color_manual(labels = c("Never initiated ART","On ART", "Dropped out from ART", "ART coverage"), values = c("red", "blue", "purple","black")) +
ggtitle("Transmissions by ART status of transmitter") +
theme(legend.position="bottom") +
guides(color=guide_legend(title="ART status", nrow=1))+
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(colour="black", fill="white")) +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
strip.background = element_blank(),
panel.border = element_rect(colour = "black"))
setwd("C:\\Users\\aakullian\\Dropbox (IDM)\\GitHub\\EMOD_eswatini\\LancetHIVParameterSweeps\\Figures")
ggsave("TransmittersByARTstate_proportions_ARTdata_baseline.jpg", height=8, width=8)
summary(inc_values6.agg.m$IP_Key.ARTstate_P)
#mean value of all sims by year
inc_values6.agg.mean <- aggregate(IP_Key.ARTstate_P ~ IP_Key.ARTstate+Year2, inc_values6, FUN=mean)
#mean value of all sims by year
inc_values6.agg.mean <- aggregate(IP_Key.ARTstate_P ~ IP_Key.ARTstate+Year2, inc_values6.agg.m, FUN=mean)
head(inc_values6.agg.mean)
#mean value of all sims by year
table(inc_values6.agg.m$IP_Key.ARTstate_P)
head(inc_values6.agg.mean)
head(inc_values6.agg.mean,100)
inc_values6.agg.mean$IP_Key.ARTstate_P[inc_values6.agg.m$Year2==2030]
inc_values6.agg.mean$IP_Key.ARTstate_P[inc_values6.agg.mean$Year2==2030]
head(subset(inc_values6.agg.mean, Year2==2030))
head(subset(inc_values6.agg.mean, Year2==2030 | Year2==2050))
#read in reportHIVbyageandgender files
input_dir <- "C:\\Users\\aakullian\\Dropbox (IDM)\\GitHub\\EMOD_eswatini\\ART100pct_transmission_ARTstate"
primary_dirs = list.files(input_dir)
inc_values6 <- data.frame("Year2"=seq(1980,2056,1))
i=0
for(dir in primary_dirs) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
temp_table$Year2 <- floor((temp_table$Year-0.5))
temp_table$Uninfected.Population = temp_table$Population-temp_table$Infected
trajectories_IR.1a <- aggregate(cbind(Newly.Infected,Transmitters) ~ Year2+IP_Key.ARTstate, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
trajectories_IR.2 <- aggregate(cbind(Uninfected.Population) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum)
trajectories_IR.2$Year2 <- floor(trajectories_IR.2$Year-0.5)
trajectories_IR.2 <- trajectories_IR.2[!duplicated(trajectories_IR.2[c("Year2")]),] #remove second instance of duplicate rows
trajectories_IR.2 <- trajectories_IR.2[-match("Year",names(trajectories_IR.2))]
trajectories_IRoverall <- merge(trajectories_IR.1a, trajectories_IR.2, by=c("Year2"))
trajectories_IRoverall$incidence <- trajectories_IRoverall$Newly.Infected / trajectories_IRoverall$Uninfected.Population
trajectories_IRoverall$sim.id <- paste(dir)
if (i == 1){
inc_values6 <- trajectories_IRoverall
}
else{
inc_values6 <- rbind(inc_values6, trajectories_IRoverall)
}
print(paste("working on folder", i, dir,sep=" "))
}
inc_values6.agg <- aggregate(Transmitters ~ Year2+sim.id, inc_values6, FUN=sum)
inc_values6.agg.m <- merge(inc_values6, inc_values6.agg, by=c("Year2","sim.id"))
inc_values6.agg.m$IP_Key.ARTstate_P <- inc_values6.agg.m$Transmitters.x / inc_values6.agg.m$Transmitters.y
head(inc_values6.agg.m)
summary(inc_values6.agg.m$IP_Key.ARTstate_P)
#mean value of all sims by year
table(inc_values6.agg.m$IP_Key.ARTstate_P)
inc_values6.agg.mean <- aggregate(IP_Key.ARTstate_P ~ IP_Key.ARTstate+Year2, inc_values6.agg.m, FUN=mean)
head(subset(inc_values6.agg.mean, Year2==2030 | Year2==2050))
#read in reportHIVbyageandgender files
input_dir <- "C:\\Users\\aakullian\\Dropbox (IDM)\\GitHub\\EMOD_eswatini\\Baseline_transmission_ARTstate"
primary_dirs = list.files(input_dir)
inc_values6 <- data.frame("Year2"=seq(1980,2056,1))
i=0
for(dir in primary_dirs[1]) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
temp_table$Year2 <- floor((temp_table$Year-0.5))
temp_table$Uninfected.Population = temp_table$Population-temp_table$Infected
trajectories_IR.1a <- aggregate(cbind(Newly.Infected,Transmitters) ~ Year2+IP_Key.ARTstate, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
trajectories_IR.2 <- aggregate(cbind(Uninfected.Population) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum)
trajectories_IR.2$Year2 <- floor(trajectories_IR.2$Year-0.5)
trajectories_IR.2 <- trajectories_IR.2[!duplicated(trajectories_IR.2[c("Year2")]),] #remove second instance of duplicate rows
trajectories_IR.2 <- trajectories_IR.2[-match("Year",names(trajectories_IR.2))]
trajectories_IRoverall <- merge(trajectories_IR.1a, trajectories_IR.2, by=c("Year2"))
trajectories_IRoverall$incidence <- trajectories_IRoverall$Newly.Infected / trajectories_IRoverall$Uninfected.Population
trajectories_IRoverall$sim.id <- paste(dir)
if (i == 1){
inc_values6 <- trajectories_IRoverall
}
else{
inc_values6 <- rbind(inc_values6, trajectories_IRoverall)
}
print(paste("working on folder", i, dir,sep=" "))
}
head(temp_table)
head(inc_values6)
head(temp_table)
i=0
for(dir in primary_dirs[1]) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
temp_table$Year2 <- floor((temp_table$Year-0.5))
temp_table$Uninfected.Population = temp_table$Population-temp_table$Infected
trajectories_IR.1a <- aggregate(cbind(Newly.Infected,Transmitters) ~ Year2+IP_Key.ARTstate, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
trajectories_IR.2 <- aggregate(cbind(Uninfected.Population,Infected) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum)
trajectories_IR.2$Year2 <- floor(trajectories_IR.2$Year-0.5)
trajectories_IR.2 <- trajectories_IR.2[!duplicated(trajectories_IR.2[c("Year2")]),] #remove second instance of duplicate rows
trajectories_IR.2 <- trajectories_IR.2[-match("Year",names(trajectories_IR.2))]
trajectories_IRoverall <- merge(trajectories_IR.1a, trajectories_IR.2, by=c("Year2"))
trajectories_IRoverall$incidence <- trajectories_IRoverall$Newly.Infected / trajectories_IRoverall$Uninfected.Population
trajectories_IRoverall$sim.id <- paste(dir)
if (i == 1){
inc_values6 <- trajectories_IRoverall
}
else{
inc_values6 <- rbind(inc_values6, trajectories_IRoverall)
}
print(paste("working on folder", i, dir,sep=" "))
}
head(temp_table)
head(inc_values6)
i=0
for(dir in primary_dirs[1]) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
temp_table$Year2 <- floor((temp_table$Year-0.5))
temp_table$Uninfected.Population = temp_table$Population-temp_table$Infected
trajectories_IR.1a <- aggregate(cbind(Newly.Infected,Transmitters) ~ Year2+IP_Key.ARTstate, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
trajectories_IR.2 <- aggregate(cbind(Uninfected.Population,Infected,Population) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum)
trajectories_IR.2$Year2 <- floor(trajectories_IR.2$Year-0.5)
trajectories_IR.2 <- trajectories_IR.2[!duplicated(trajectories_IR.2[c("Year2")]),] #remove second instance of duplicate rows
trajectories_IR.2 <- trajectories_IR.2[-match("Year",names(trajectories_IR.2))]
trajectories_IRoverall <- merge(trajectories_IR.1a, trajectories_IR.2, by=c("Year2"))
trajectories_IRoverall$incidence <- trajectories_IRoverall$Newly.Infected / trajectories_IRoverall$Uninfected.Population
trajectories_IRoverall$sim.id <- paste(dir)
if (i == 1){
inc_values6 <- trajectories_IRoverall
}
else{
inc_values6 <- rbind(inc_values6, trajectories_IRoverall)
}
print(paste("working on folder", i, dir,sep=" "))
}
head(temp_table)
head(inc_values6)
head(inc_values6,100)
i=0
for(dir in primary_dirs) {
i=i+1
temp_table <- as.data.table(read.csv(file = paste(input_dir,dir,"ReportHIVByAgeAndGender.csv",sep="/")))
temp_table$Year2 <- floor((temp_table$Year-0.5))
temp_table$Uninfected.Population = temp_table$Population-temp_table$Infected
trajectories_IR.1a <- aggregate(cbind(Newly.Infected,Transmitters) ~ Year2+IP_Key.ARTstate, subset(temp_table, Age>10 & Age<50), FUN=sum) #sums number of new infections in each year
trajectories_IR.2 <- aggregate(cbind(Uninfected.Population,Infected,Population) ~ Year, subset(temp_table, Age>10 & Age<50), FUN=sum)
trajectories_IR.2$Year2 <- floor(trajectories_IR.2$Year-0.5)
trajectories_IR.2 <- trajectories_IR.2[!duplicated(trajectories_IR.2[c("Year2")]),] #remove second instance of duplicate rows
trajectories_IR.2 <- trajectories_IR.2[-match("Year",names(trajectories_IR.2))]
trajectories_IRoverall <- merge(trajectories_IR.1a, trajectories_IR.2, by=c("Year2"))
trajectories_IRoverall$incidence <- trajectories_IRoverall$Newly.Infected / trajectories_IRoverall$Uninfected.Population
trajectories_IRoverall$sim.id <- paste(dir)
if (i == 1){
inc_values6 <- trajectories_IRoverall
}
else{
inc_values6 <- rbind(inc_values6, trajectories_IRoverall)
}
print(paste("working on folder", i, dir,sep=" "))
}
head(temp_table)
head(inc_values6,100)
inc_values6.agg <- aggregate(Transmitters ~ Year2+sim.id, inc_values6, FUN=sum)
inc_values6.agg.m <- merge(inc_values6, inc_values6.agg, by=c("Year2","sim.id"))
inc_values6.agg.m$IP_Key.ARTstate_P <- inc_values6.agg.m$Transmitters.x / inc_values6.agg.m$Transmitters.y
head(inc_values6.agg.m)
summary(inc_values6.agg.m$IP_Key.ARTstate_P)
inc_values6.agg.m$IP_Key.ARTstate_INC <- inc_values6.agg.m$Transmitters.x / inc_values6.agg.m$Infected
head(inc_values6.agg.m)
summary(inc_values6.agg.m$IP_Key.ARTstate_INC)
head(inc_values6,100)
inc_values6.agg <- aggregate(Transmitters ~ Year2+sim.id, inc_values6, FUN=sum)
inc_values6.agg.m <- merge(inc_values6, inc_values6.agg, by=c("Year2","sim.id"))
inc_values6.agg.m$IP_Key.ARTstate_P <- inc_values6.agg.m$Transmitters.x / inc_values6.agg.m$Transmitters.y
inc_values6.agg.m$IP_Key.ARTstate_INC <- inc_values6.agg.m$Transmitters.x / inc_values6.agg.m$Infected
head(inc_values6.agg.m)
summary(inc_values6.agg.m$IP_Key.ARTstate_P)
summary(inc_values6.agg.m$IP_Key.ARTstate_INC)
head(inc_values6.agg.m)
head(inc_values6.agg.m[2])
head(inc_values6.agg.m[c(1,3:11)])
head(inc_values6.agg.m[c(1,3:11)])
head(inc_values6.agg.m[c(1,3:11)])
head(inc_values6.agg.m[c(1,3:8,10:11)])
head(inc_values6.agg.m[c(1,3:8,10:11)],100)
head(inc_values6.agg.m[c(1,3:8,10:11)],100)
head(subset(inc_values6.agg.m[c(1,3:8,10:11)],Year2==2010),100)
inc_values6.agg <- aggregate(Transmitters ~ Year2+sim.id, inc_values6, FUN=sum)
inc_values6.agg.m <- merge(inc_values6, inc_values6.agg, by=c("Year2","sim.id"))
inc_values6.agg.m$IP_Key.ARTstate_P <- inc_values6.agg.m$Transmitters.x / inc_values6.agg.m$Transmitters.y
inc_values6.agg.m$IP_Key.ARTstate_INC <- inc_values6.agg.m$Transmitters.x / inc_values6.agg.m$Infected
head(subset(inc_values6.agg.m[c(1,3:8,10:11)],Year2==2010),100)
names(inc_values6.agg.m)
head(subset(inc_values6.agg.m[c(1,3:8,10:12)],Year2==2010),100)
head(subset(inc_values6.agg.m[c(1,3:8,10:12)],Year2>2010),100)
summary(inc_values6.agg.m$IP_Key.ARTstate_INC)
head(subset(inc_values6.agg.m[c(1,3:8,10:12)],IP_Key.ARTstate_INC>1),100)
infile <- url('https://github.com/aakullian/ahriRiskScore/blob/master/Scripts/PPDV_AgeGenderYear_plotting_dev.Rmd')
output <- backstitch(infile, output_type = 'script', chunk_header = "#+")
#################################################################################################
#Conert from Rmd to Rscript
#################################################################################################
devtools::source_gist('284671997992aefe295bed34bb53fde6', filename = 'backstitch.R')
library("markdown")
library("ggplot2")
library("plyr")
library("readstata13")
library("tableone")
library("rgeos")
library("sp")
library("foreach")
library("PBSmapping")
library("mgcv")
library("Rcpp")
library("foreign")
library("multcomp")
library("data.table")
library("reshape2")
library("dplyr")
library("ggpubr")
library("expss")
library("zoo")
library("margins")
library("MASS")
library("devtools")
install.packages("devtools")
library("devtools")
#################################################################################################
#Conert from Rmd to Rscript
#################################################################################################
devtools::source_gist('284671997992aefe295bed34bb53fde6', filename = 'backstitch.R')
install.packages("rlang")
library("rlang")
library("devtools")
